{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\User\\\\Desktop\\\\web\\\\amingo-yellow-lions-new\\\\frontend\\\\src\\\\components\\\\feeds\\\\Feeds.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport FeedItem from './FeedItem';\nimport FeedForm from './FeedForm';\nimport { getFeeds } from '../../actions/feed';\n\nconst Feeds = ({\n  getFeeds,\n  feed: {\n    feeds,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getFeeds();\n  }, [getFeeds]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Feeds\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" Welcome to Health Share\"), React.createElement(FeedForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, feeds.map(feed => React.createElement(FeedItem, {\n    key: feed._id,\n    feed: feed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n};\n\nFeeds.propTypes = {\n  getFeeds: PropTypes.func.isRequired,\n  feed: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  feed: state.feed\n});\n\nexport default connect(mapStateToProps, {\n  getFeeds\n})(Feeds);","map":{"version":3,"sources":["D:/Users/User/Desktop/web/amingo-yellow-lions-new/frontend/src/components/feeds/Feeds.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","FeedItem","FeedForm","getFeeds","Feeds","feed","feeds","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AACxDV,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,GACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,6BAFF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUH,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACI,GAApB;AAAyB,IAAA,IAAI,EAAEJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CAHF;AAgBD,CArBD;;AAuBAD,KAAK,CAACM,SAAN,GAAkB;AAChBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,IAAV,CAAeC,UADT;AAEhBP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACe,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport FeedItem from './FeedItem';\r\nimport FeedForm from './FeedForm';\r\nimport { getFeeds } from '../../actions/feed';\r\n\r\nconst Feeds = ({ getFeeds, feed: { feeds, loading } }) => {\r\n  useEffect(() => {\r\n    getFeeds();\r\n  }, [getFeeds]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Feeds</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome to Health Share\r\n      </p>\r\n      <FeedForm />\r\n      <div className='posts'>\r\n        {feeds.map(feed => (\r\n          <FeedItem key={feed._id} feed={feed} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nFeeds.propTypes = {\r\n  getFeeds: PropTypes.func.isRequired,\r\n  feed: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  feed: state.feed\r\n});\r\n\r\nexport default connect(mapStateToProps, { getFeeds })(Feeds);\r\n"]},"metadata":{},"sourceType":"module"}