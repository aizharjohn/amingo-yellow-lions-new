{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\User\\\\Desktop\\\\web\\\\amingo-yellow-lions-new\\\\frontend\\\\src\\\\components\\\\feed\\\\Feed.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport FeedItem from '../feeds/FeedItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getFeed } from '../../actions/feed';\n\nconst Feed = ({\n  getFeed,\n  feed: {\n    feed,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getFeed(match.params.id);\n  }, [getFeed, match.params.id]);\n  return loading || feed === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/feeds\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Back To Feeds\"), React.createElement(FeedItem, {\n    feed: feed,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    feedId: feed._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, feed.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    feedId: feed._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nFeed.propTypes = {\n  getFeed: PropTypes.func.isRequired,\n  feed: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  feed: state.feed\n});\n\nexport default connect(mapStateToProps, {\n  getFeed\n})(Feed);","map":{"version":3,"sources":["D:/Users/User/Desktop/web/amingo-yellow-lions-new/frontend/src/components/feed/Feed.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","FeedItem","CommentForm","CommentItem","getFeed","Feed","feed","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAWE,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAC5DZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACN,OAAD,EAAUI,KAAK,CAACC,MAAN,CAAaC,EAAvB,CAFM,CAAT;AAIA,SAAOH,OAAO,IAAID,IAAI,KAAK,IAApB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAER,IAAI,CAACK,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CAHF;AAgBD,CArBD;;AAuBAN,IAAI,CAACU,SAAL,GAAiB;AACfX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,IAAV,CAAeC,UADT;AAEfX,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport FeedItem from '../feeds/FeedItem';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\nimport { getFeed } from '../../actions/feed';\r\n\r\nconst Feed = ({ getFeed, feed: { feed, loading }, match }) => {\r\n  useEffect(() => {\r\n    getFeed(match.params.id);\r\n  }, [getFeed, match.params.id]);\r\n\r\n  return loading || feed === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/feeds' className='btn'>\r\n        Back To Feeds\r\n      </Link>\r\n      <FeedItem feed={feed} showActions={false} />\r\n      <CommentForm feedId={feed._id} />\r\n      <div className='comments'>\r\n        {feed.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} feedId={feed._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nFeed.propTypes = {\r\n  getFeed: PropTypes.func.isRequired,\r\n  feed: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  feed: state.feed\r\n});\r\n\r\nexport default connect(mapStateToProps, { getFeed })(Feed);\r\n"]},"metadata":{},"sourceType":"module"}